{"version":3,"sources":["api/config.ts","i18n.ts","api/service.ts","api/contract.ts","page/coralstake.tsx","utils/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["address","abi","lang","localStorage","getItem","console","log","setItem","i18n","use","LanguageDetector","initReactI18next","init","resources","en_US","translation","zh_CN","ko_KR","ja_JP","be_BY","fallbackLng","debug","interpolation","escapeValue","seropp","require","service","id","this","hash","that","Promise","resolve","reject","setInterval","rpc","then","rest","clearInterval","catch","e","method","args","initDApp","host","data","params","axios","post","resp","error","message","result","Error","getAccountList","err","dapp","name","contractAddress","config","github","author","url","window","location","origin","pathname","logo","barColor","navColor","barMode","navMode","getInfo","language","info","changeLanguage","serojs","contract","callContract","account","call","MainPKr","res","cy","value","daysLimit","execute","to","from","packData","unPackDataEx","__length__","BigNumber","toString","gas","PK","executeContract","Option","Select","successIcon","CheckCircleOutlined","style","fontSize","antIcon","LoadingOutlined","spin","Coralstake","useState","currentAccount","setCurrentAccount","accountList","setAccountList","userVisible","setUserVisible","stakeValue","setStakeValue","stakeUnlockedValue","setStakeUnlockedValue","poolValue","setPoolValue","rewardValue","setRewardValue","coralAmount","setCoralAmount","stakeVisible","setStakeVisible","sendStakeAmount","setSendStakeAmount","setDaysLimit","loadState","setLoadState","loadDescription","setDescription","loadIndicator","setLoadIndicator","totalAmount","setTotalAmount","useEffect","gatdata","userobj","undefined","sessionStorage","length","find","item","IsCurrent","Name","getStakeValue","getPoolValue","getrewardValue","getCoralAmount","getTotal","balanceOf","tkn","CORAL","fromValue","Balance","get","unlockedValue","loading","status","description","indicator","v","d","dividedBy","toFixed","className","display","position","width","top","left","margin","background","textAlign","padding","borderRadius","wordBreak","spinning","tip","t","lineHeight","substring","type","size","onClick","title","visible","onCancel","footer","centered","itemLayout","dataSource","renderItem","index","Item","userName","Meta","precision","suffix","disabled","isZero","onOk","stake","multipliedBy","setTimeout","getTransactionReceipt","okText","cancelText","min","placeholder","onChange","target","str","len1","substr","len2","indexOf","str_","charAt","replace","verify","defaultValue","unstake","harvest","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56778c67.chunk.js","sourcesContent":["export const address: string = \"64nw6ptHQYGoQzdTVibikiBGuCrortAKxDQBovtNvYcA27ovTZNTJCnnMGaBFb9BrHktfwpfcRguvnSfGPvs9XAQ\";\r\n\r\n\r\nexport const abi: any = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"harvest\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"poolValue\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"recharge\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"rewardValue\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"daysLimit\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"stake\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"stakeValue\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"unlockedValue\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pledgeValue\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"total\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"unstake\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n","import LanguageDetector from 'i18next-browser-languagedetector';\r\nimport i18n from 'i18next';\r\nimport en_US from './locales/en_US.json';\r\nimport zh_CN from './locales/zh_CN.json';\r\nimport ko_KR from './locales/ko_KR.json';\r\nimport ja_JP from './locales/ja_JP.json';\r\nimport be_BY from './locales/be_BY.json';\r\n\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nlet lang = localStorage.getItem(\"language\");\r\nconsole.log(\"lang=\",lang)\r\nif (!lang) {\r\n    lang = 'zh_CN';\r\n    localStorage.setItem(\"language\", 'zh_CN');\r\n}\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources: {\r\n            en_US: {\r\n                translation: en_US,\r\n            },\r\n            zh_CN: {\r\n                translation: zh_CN,\r\n            },\r\n            ko_KR: {\r\n                translation: ko_KR,\r\n            },\r\n            ja_JP: {\r\n                translation: ja_JP,\r\n            },\r\n            be_BY: {\r\n                translation: be_BY,\r\n            },\r\n        },\r\n        fallbackLng: lang,\r\n        debug: false,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\nexport default i18n;\r\n","import * as config from './config';\r\nimport axios from 'axios';\r\nimport i18n from '../i18n';\r\nconst seropp = require(\"sero-pp\");\r\n\r\nclass Service {\r\n    id: number\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n    }\r\n    async getTransactionReceipt(hash: string) {\r\n        const that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let id: any\r\n            id = setInterval(function () {\r\n                that.rpc(\"sero_getTransactionReceipt\", [hash]).then((rest: any) => {\r\n                    if (rest) {\r\n                        clearInterval(id)\r\n                        resolve(rest);\r\n                    } else {\r\n                    }\r\n                }).catch(e => {\r\n                    reject(e)\r\n                })\r\n            }, 5000)\r\n        })\r\n    }\r\n\r\n    async rpc(method: string, args: any) {\r\n        return new Promise((resolve, reject) => {\r\n            this.initDApp().then((host: any) => {\r\n                const data: any = {\r\n                    id: this.id++,\r\n                    method: method,\r\n                    params: args\r\n                }\r\n                if (!host) {\r\n                    reject(new Error(\"rpc unset !\"))\r\n                } else {\r\n                    axios.post(host, data).then((resp: any) => {\r\n                        if (resp.data && resp.data.error) {\r\n                            reject(resp.data.error.message)\r\n                        } else if (resp.data && resp.data.result) {\r\n                            resolve(resp.data.result)\r\n                        }\r\n                    }).catch(e => {\r\n                        reject(e)\r\n                    })\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    async accountList() {\r\n        return new Promise((resolve, reject) => {\r\n            seropp.getAccountList(function (data: any, err: any) {\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    resolve(data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    async initDApp() {\r\n        const dapp = {\r\n            name: \"Coral Stake\",\r\n            contractAddress: config.address,\r\n            github: \"1\",\r\n            author: \"Coral Stake\",\r\n            url: window.location.origin + window.location.pathname,\r\n            logo: window.location.origin + window.location.pathname + \"dapplogo.png\",\r\n            barColor: \"#1890ff\",\r\n            navColor: \"#1890ff\",\r\n            barMode: \"dark\",\r\n            navMode: \"light\"\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            seropp.init(dapp, function (rest: any, err: any) {\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    seropp.getInfo(function (data: any) {\r\n                        if (data) {\r\n                            localStorage.setItem(\"language\", data.language);\r\n                            localStorage.setItem(\"host\", data.rpc)\r\n                        }\r\n                        resolve(data.rpc)\r\n                    })\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    setLanguage() {\r\n        seropp.getInfo(function (info: any) {\r\n            localStorage.setItem(\"language\", info.language);\r\n            i18n.changeLanguage(info.language).catch((e:any)=>{\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\nconst service = new Service();\r\n\r\nexport default service;","import * as config from './config';\r\nimport service from \"./service\";\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst serojs = require(\"serojs\");\r\nconst seropp = require(\"sero-pp\");\r\n\r\nexport interface Params {\r\n    from?: string\r\n    to: string\r\n    cy?: string\r\n    value?: string\r\n    gas?: string\r\n    gasPrice?: string\r\n    data?: string\r\n}\r\nclass Contract {\r\n    contract: any;\r\n\r\n    constructor() {\r\n        this.contract = serojs.callContract(config.abi, config.address)\r\n    }\r\n\r\n    async stakeValue(account: any) {\r\n        console.log(\"stakeValue\")\r\n        const res = await this.call(\"stakeValue\", [], account.MainPKr)\r\n        return res;\r\n    }\r\n\r\n    async poolValue(account: any) {\r\n        const res = await this.call(\"poolValue\", [], account.MainPKr)\r\n        return res[0];\r\n    }\r\n    async rewardValue(account: any) {\r\n        const res = await this.call(\"rewardValue\", [], account.MainPKr)\r\n        return res[0];\r\n    }\r\n\r\n\r\n    async stake(account: any, cy: string, value: string, daysLimit: any) {\r\n        console.log(\"stake\",value)\r\n        const res = await this.execute(\"stake\", [daysLimit], account, cy, value);\r\n        return res;\r\n    }\r\n\r\n    async unstake(account: any, cy: string, to: string) {\r\n        console.log(\"unstake\", to)\r\n        const res = await this.execute(\"unstake\", [to], account, cy, '0x0');\r\n        return res;\r\n    }\r\n\r\n\r\n    async harvest(account: any, cy: string, to: string) {\r\n        console.log(\"harvest\", to)\r\n        const res = await this.execute(\"harvest\", [to], account, cy, '0x0');\r\n        return res;\r\n    }\r\n\r\n    async recharge(account: any, cy: string, value: string) {\r\n        console.log(\"recharge\", value)\r\n        const res = await this.execute(\"recharge\", [], account, cy, value);\r\n        return res;\r\n    }\r\n\r\n\r\n    async balanceOf(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            service.rpc(\"sero_getBalance\", [config.address, \"latest\"]).then(data => {\r\n                if (data != \"0x\") {\r\n                    resolve(data)\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    async call(method: string, args: Array<any>, from: string, cy?: string, value?: string): Promise<any> {\r\n        const packData: any = this.contract.packData(method, args, true)\r\n        const contract = this.contract;\r\n        return new Promise((resolve, reject) => {\r\n            const params: Params = {\r\n                to: this.contract.address\r\n            }\r\n            params.from = from\r\n            params.data = packData;\r\n            if (cy) {\r\n                params.cy = cy;\r\n            }\r\n            if (value) {\r\n                params.value = value;\r\n            }\r\n            service.rpc(\"sero_call\", [params, \"latest\"]).then(data => {\r\n                if (data != \"0x\") {\r\n                    const rest: any = contract.unPackDataEx(method, data);\r\n                    if (rest.__length__ > 0) {\r\n                        resolve(rest)\r\n                    } else {\r\n                        resolve(data)\r\n                    }\r\n                } else {\r\n                    resolve(data)\r\n                }\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    async execute(method: string, args: Array<any>, account: any, cy?: string, value?: string): Promise<any> {\r\n        const packData: any = this.contract.packData(method, args, true)\r\n        return new Promise((resolve, reject) => {\r\n            const params: Params = {\r\n                to: this.contract.address\r\n            }\r\n            params.from = account.MainPKr\r\n            params.data = packData;\r\n            if (cy) {\r\n                params.cy = cy;\r\n            }\r\n            if (value) {\r\n                params.value = \"0x\" + new BigNumber(value).toString(16);\r\n            }\r\n            service.rpc(\"sero_estimateGas\", [params]).then((data: any) => {\r\n                params.gas = data;\r\n                params.from = account.PK\r\n                seropp.executeContract(params, function (hash: any, err: any) {\r\n                    if (err) {\r\n                        reject(err)\r\n                    } else {\r\n                        resolve(hash)\r\n                    }\r\n                })\r\n            }).catch(e => {\r\n                reject(e)\r\n            })\r\n        })\r\n    }\r\n}\r\nconst contract = new Contract();\r\n\r\nexport default contract;","import React, { useEffect, useState } from 'react'\n\nimport service from '../api/service';\nimport contract from '../api/contract';\nimport { Button, Input, List, Modal, Select, Spin, Statistic } from 'antd';\nimport BigNumber from 'bignumber.js'\nimport { verify } from '../utils';\nimport { LoadingOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport i18n from '../i18n';\n\nconst { Option } = Select;\n\nconst successIcon = <CheckCircleOutlined style={{ fontSize: 24 }} />\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nexport default function Coralstake() {\n  const [currentAccount, setCurrentAccount] = useState<any>({});\n  const [accountList, setAccountList] = useState<any>([]);\n\n  const [userVisible, setUserVisible] = useState<boolean>(false);\n  const [stakeValue, setStakeValue] = useState<string>('');\n  const [stakeUnlockedValue, setStakeUnlockedValue] = useState<string>('');\n\n  const [poolValue, setPoolValue] = useState<string>('');\n  const [rewardValue, setRewardValue] = useState<string>('');\n  const [coralAmount, setCoralAmount] = useState<string>('0');\n\n\n  const [stakeVisible, setStakeVisible] = useState<boolean>(false);\n\n  const [sendStakeAmount, setSendStakeAmount] = useState<string>('0');\n\n  const [daysLimit, setDaysLimit] = useState<string>('5');\n\n  const [loadState, setLoadState] = useState<boolean>(false);\n  const [loadDescription, setDescription] = useState<string>('');\n  const [loadIndicator, setLoadIndicator] = useState<any>(antIcon);\n\n  const [totalAmount, setTotalAmount] = useState<string>('0');\n  useEffect(() => {\n    gatdata();\n  }, [])\n\n\n  const gatdata = () => {\n    service.accountList().then((res: any) => {\n      let userobj: any = {};\n      if (sessionStorage.getItem(\"userName\")?.length === undefined) {\n        userobj = res.find(function (item: any) {\n          return item.IsCurrent === true;\n        })\n      } else {\n        userobj = res.find(function (item: any) {\n          return item.Name === sessionStorage.getItem(\"userName\");\n        })\n      }\n      // console.log(\"userobj\", userobj);\n      setAccountList(res);\n      init(userobj);\n    })\n  }\n\n  const init = (account: any) => {\n    getStakeValue(account);\n    getPoolValue(account);\n    getrewardValue(account);\n    getCoralAmount(account);\n    setCurrentAccount(account);\n    getTotal();\n  }\n\n\n  const getTotal = () => {\n    contract.balanceOf().then((res) => {\n      if (res.tkn && res.tkn.CORAL) {\n        setTotalAmount(fromValue(res.tkn.CORAL, 18))\n      } else {\n        setTotalAmount(\"0.00\")\n      }\n\n    }).catch((err: any) => {\n      console.log(\"balanceOf err=\", err)\n      setTotalAmount(\"0.00\")\n    })\n  }\n\n  const getCoralAmount = (account: any) => {\n    // console.log(account.Balance.get(\"CORAL\"), \"getCoralAmount\", new BigNumber(account.Balance.get(\"CORAL\")).dividedBy(10 ** 18).toFixed(2));\n    if (account.Balance.get(\"CORAL\")) {\n      setCoralAmount(fromValue(account.Balance.get(\"CORAL\"), 18))\n    } else {\n      setCoralAmount(\"0.00\")\n    }\n  }\n\n  const getStakeValue = (account: any) => {\n    contract.stakeValue(account).then((res) => {\n      console.log(\"stakeValue=\", res)\n      setStakeValue(fromValue(res.value, 18));\n      setStakeUnlockedValue(fromValue(res.unlockedValue, 18))\n    }).catch((err: any) => {\n      console.log(\"stakeValue err=\", err)\n    })\n  }\n\n  const getPoolValue = (account: any) => {\n    contract.poolValue(account).then((res) => {\n      console.log(\"poolValue=\", res)\n      setPoolValue(fromValue(res, 18))\n    }).catch((err: any) => {\n      console.log(\"poolValue err=\", err)\n    })\n  }\n\n  const getrewardValue = (account: any) => {\n    contract.rewardValue(account).then((res) => {\n      console.log(\"rewardValue=\", res)\n      setRewardValue(fromValue(res, 18));\n    }).catch((err: any) => {\n      console.log(\"rewardValue err=\", err)\n    })\n  }\n\n  // stake(account: any, cy: string, value: string,daysLimit:any) \n  const sendStake = () => {\n    console.log(\"sendStake\", sendStakeAmount, daysLimit)\n    contract.stake(currentAccount, \"CORAL\", new BigNumber(sendStakeAmount).multipliedBy(10 ** 18).toString(), daysLimit).then((hash) => {\n      console.log(\"sendStake hash=\", hash)\n      setStakeVisible(false);\n      setSendStakeAmount('');\n      setDaysLimit(\"30\");\n      setTimeout(function () {\n        loading(true, \"PENDING...\", antIcon)\n        service.getTransactionReceipt(hash).then((res) => {\n          loading(true, \"SUCCESSFUL\", successIcon)\n          setTimeout(function () {\n            init(currentAccount)\n            loading(false, \"PENDING...\", antIcon)\n          }, 1500)\n        })\n      }, 1500)\n\n    }).catch((err: any) => {\n      console.log(\"sendStake err=\", err)\n    })\n  }\n\n  //  unstake(account: any, cy: string, value: string,to:any) {\n  const sendUnstake = () => {\n    console.log(currentAccount)\n    contract.unstake(currentAccount, \"CORAL\", currentAccount.MainPKr).then((hash) => {\n      console.log(\"sendUnstake hash=\", hash)\n\n      setTimeout(function () {\n        loading(true, \"PENDING...\", antIcon)\n        service.getTransactionReceipt(hash).then((res) => {\n          console.log(\"getTransactionReceipt\", res)\n          loading(true, \"SUCCESSFUL\", successIcon)\n          setTimeout(function () {\n            init(currentAccount)\n            loading(false, \"PENDING...\", antIcon)\n          }, 1500)\n        })\n      }, 1500)\n    }).catch((err: any) => {\n      console.log(\"sendUnstake err=\", err)\n    })\n  }\n\n  const sendHarvest = () => {\n    contract.harvest(currentAccount, \"CORAL\", currentAccount.MainPKr).then((hash) => {\n      console.log(\"sendUnstake hash=\", hash)\n      setTimeout(function () {\n        loading(true, \"PENDING...\", antIcon)\n        service.getTransactionReceipt(hash).then((res) => {\n          loading(true, \"SUCCESSFUL\", successIcon)\n          setTimeout(function () {\n            init(currentAccount)\n            loading(false, \"PENDING...\", antIcon)\n          }, 1500)\n        })\n      }, 1500)\n    }).catch((err: any) => {\n      console.log(\"sendUnstake err=\", err)\n    })\n  }\n\n\n  const loading = (status: boolean, description: string, indicator: any) => {\n    setLoadState(status);\n    setDescription(description)\n    setLoadIndicator(indicator)\n  }\n\n  const fromValue = (v: any, d: number) => {\n    if (v) {\n      return new BigNumber(v).dividedBy(10 ** d).toFixed(2)\n    } else {\n      return new BigNumber(0).toFixed(2)\n    }\n  }\n\n  return (\n    <div className='main'>\n      <div style={{\n        display: loadState ? \"inherit\" : \"none\",\n        position: \"absolute\",\n        width: \"100px\",\n        top: \"50%\",\n        left: \"50%\",\n        margin: \"-100px 0 0 -50px\",\n        background: \"#333\",\n        textAlign: \"center\",\n        padding: \"10px\",\n        borderRadius: \"10px\",\n        wordBreak: \"break-all\"\n      }}>\n        <Spin indicator={loadIndicator} spinning={loadState} tip={loadDescription}>\n        </Spin>\n      </div>\n\n      <div className='account'>\n        <p className='title'>\n          <span>{i18n.t(\"Account\")}</span>\n        </p>\n        {/* <Button type=\"primary\" onClick={() => {\n          contract.recharge(currentAccount, \"CORAL\", new BigNumber(10).multipliedBy(10 ** 18).toString()).then((hash) => {\n            console.log(hash)\n          }).catch((err) => {\n            console.log(err)\n          })\n        }}>recharge</Button> */}\n\n        <div className='account-content'>\n          <div className='item'>\n            <div className='content'>\n              <p style={{\n                lineHeight: \"24px\"\n              }}>{currentAccount.Name}&nbsp;&nbsp;&nbsp;&nbsp;{currentAccount.MainPKr && `${currentAccount.MainPKr.substring(0, 5)}.....${currentAccount.MainPKr.substring(currentAccount.MainPKr.length - 5, currentAccount.MainPKr.length)}`}\n              </p>\n\n            </div>\n            <div className='switch'>\n              <p>\n                <Button type='primary' size='small'\n                  onClick={() => setUserVisible(true)}\n                > {i18n.t(\"Switch\")}</Button>\n\n                <Modal\n                  className=\"userboxs\"\n                  title={i18n.t(\"Switchuser\")}\n                  visible={userVisible}\n                  onCancel={() => setUserVisible(false)}\n                  footer={null}\n                  centered={true}\n                >\n                  <List\n                    size=\"small\"\n                    className=\"userlistbox\"\n                    itemLayout=\"horizontal\"\n                    dataSource={accountList}\n                    renderItem={(item: any, index: number) => (\n                      <List.Item\n                        onClick={() => {\n                          console.log(\"accountList\", accountList, item.Name)\n                          let userobj = accountList.find(function (data: any) {\n                            return data.Name == item.Name;\n                          })\n                          // console.log(\"userobj\",userobj)\n                          let userName = userobj.Name;\n                          sessionStorage.setItem(\"userName\", userName);\n                          setCurrentAccount(userobj);\n                          setUserVisible(false);\n                          init(userobj);\n                        }}\n                        key={index}\n                      >\n                        <List.Item.Meta\n                          description={<p className='user-item'>\n                            <span>{item.Name}</span>\n                            <span>{item.MainPKr.substring(0, 8)} ..... {item.MainPKr.substring(item.MainPKr.length - 7, item.MainPKr.length)}</span>\n                          </p>}\n                        />\n                      </List.Item>\n                    )}\n                  />\n                </Modal>\n              </p>\n            </div>\n          </div>\n\n          <div className='item' style={{\n            lineHeight: \"40px\"\n          }}>\n            <div className='content'>\n              <p>\n                <Statistic value={coralAmount} precision={2} suffix=\"CORAL\" />\n              </p>\n            </div>\n            <div className='switch'>\n              <p>\n                <Button type='primary' disabled={new BigNumber(coralAmount).isZero() ? true : false} size='small'\n                  onClick={() => setStakeVisible(true)}\n                >{i18n.t(\"stake\")}</Button>\n\n                <Modal\n                  className=\"stake\"\n                  title={i18n.t(\"stake\")}\n                  visible={stakeVisible}\n                  centered={true}\n                  onOk={() => {\n                    sendStake()\n                  }}\n                  onCancel={() => setStakeVisible(false)}\n                  okText={i18n.t(\"confirm\")}\n                  cancelText={i18n.t(\"cancel\")}\n                >\n                  <div className='stake-item'>\n                    <div>\n                      <p>{i18n.t(\"amount\")}:</p>\n                    </div>\n                    <div>\n                      <Input min={0} value={sendStakeAmount} placeholder='0.0' onChange={(e) => {\n                        let value = e.target.value;\n                        value = verify(value);\n                        setSendStakeAmount(value)\n                      }\n                      } />\n                    </div>\n                  </div>\n\n                  <div className='stake-item'>\n                    <div>\n                      <p>{i18n.t(\"cycle\")}:</p>\n                    </div>\n                    <div>\n                      <Select defaultValue={daysLimit} style={{ width: \"100%\" }} onChange={(value: any) => {\n                        setDaysLimit(value)\n                      }}>\n                        <Option value=\"5\">5 {i18n.t(\"day\")}</Option>\n                        <Option value=\"60\">60 {i18n.t(\"day\")}</Option>\n                        <Option value=\"90\">90 {i18n.t(\"day\")}</Option>\n                      </Select>\n                    </div>\n                  </div>\n\n                </Modal>\n              </p>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n\n      <div className='pool'>\n        <p className='title'>\n          <span>{i18n.t(\"pool\")}</span>\n        </p>\n        <div className='pool-content'>\n          <p className='pool-item'>\n            <span style={{\n              lineHeight: '37px'\n            }}>{i18n.t(\"totalStake\")}</span>\n            <Statistic value={totalAmount} precision={2} suffix=\"CORAL\" />\n          </p>\n\n          <p className='pool-item'>\n            <span style={{\n              lineHeight: '37px'\n            }}>{i18n.t(\"Pooltotal\")}</span>\n            <Statistic value={poolValue} precision={2} suffix=\"SERO\" />\n          </p>\n        </div>\n      </div>\n\n      <div className='funds'>\n        <p className='title'>\n          <span>{i18n.t(\"myStale\")}</span>\n        </p>\n        <div className='funds-content'>\n          <div>\n            {i18n.t(\"UnlockedValue\")}/{i18n.t(\"StaleValue\")}\n          </div>\n          <div className='funds-item'>\n            <div className='item-left' style={{\n              display: \"flex\",\n              lineHeight: \"37px\",\n              wordBreak: 'break-all'\n            }}>\n              <Statistic value={stakeUnlockedValue} precision={2} /> &nbsp;/&nbsp; <Statistic value={stakeValue} precision={2} suffix=\"CORAL\" />\n            </div>\n            <div className='item-right'>\n              <p style={{\n                lineHeight: '37px'\n              }}>\n                <Button type='primary' disabled={new BigNumber(stakeUnlockedValue).isZero() ? true : false} size='small'\n                  onClick={() => (sendUnstake())}\n                > {i18n.t(\"Unstake\")}</Button>\n              </p>\n            </div>\n          </div>\n          <div>\n            {i18n.t(\"Canextractyield\")}\n          </div>\n          <div className='funds-item'>\n            <div className='item-left'>\n              <Statistic value={rewardValue} precision={2} suffix=\"CORAL\" />\n            </div>\n            <div className='item-right'>\n              <p style={{\n                lineHeight: '37px'\n              }}>\n                <Button type='primary' disabled={new BigNumber(rewardValue).isZero() ? true : false} size='small'\n                  onClick={() => { sendHarvest() }}\n                >{i18n.t(\"harvest\")}</Button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","export const verify = (value: any) => {\n    let str = value;\n    let len1 = str.substr(0, 1);\n    let len2 = str.substr(1, 1);\n    if (str.length > 1 && len1 == 0 && len2 != \".\") {\n        str = str.substr(1, 1);\n    }\n    if (len1 == \".\") {\n        str = \"\";\n    }\n    if (str.indexOf(\".\") != -1) {\n        let str_ = str.substr(str.indexOf(\".\") + 1);\n        if (str_.indexOf(\".\") != -1) {\n            str = str.substr(0, str.indexOf(\".\") + str_.indexOf(\".\") + 1);\n        }\n    }\n    if (str.length > 1 && str.charAt(str.length - 1) == '-') {\n        str = str.substr(0, str.length - 1);\n    }\n    return str.replace(/[^\\-^\\d^\\.]+/g, '');\n};","import React, { FC } from 'react';\nimport './App.css';\nimport Coralstake from './page/coralstake';\nconst App: FC = () => (\n  <div className=\"App\">\n    <Coralstake />\n  </div> \n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />   \n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n "],"sourceRoot":""}